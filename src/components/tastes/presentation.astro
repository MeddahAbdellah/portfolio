---
import { Button } from "../ui/button";
import { Separator } from "../ui/separator";
---

<style scoped>
  .white-shadow {
    box-shadow: 0px 0px 20px 2px rgba(255, 255, 255, 0.25);
  }

  .bullets {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .bullet {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: hsl(var(--muted));
    margin: 0 4px;
    transition: 0.2s;
  }

  .bullet:nth-child(1) {
    background-color: hsl(var(--primary));
  }
</style>
<section class="min-w-80 flex flex-col">
  <img
    id="skill-tastes-presentation-img"
    src="present-code-examples.gif"
    alt=""
  />
  <Separator />
  <h6 id="skill-tastes-presentation-title" class="px-4 pt-4 text-lg font-bold">
  </h6>
  <p
    id="skill-tastes-presentation-text"
    class="px-4 py-2 text-sm overflow-auto"
  >
  </p>
  <div class="flex w-full justify-between px-2 py-2 mt-auto">
    <Button
      id="skill-tastes-presentation-prev"
      disabled={true}
      variant="outline"
    >
      Prev
    </Button>
    <div class="bullets">
      <span class="bullet"></span>
      <span class="bullet"></span>
      <span class="bullet"></span>
      <span class="bullet"></span>
      <span class="bullet"></span>
    </div>
    <Button id="skill-tastes-presentation-next" variant="outline">Next</Button>
  </div>
</section>

<script type="module">
  const slides = [
    {
      gif: "",
      title: "Let people leave a review of me!",
      content: `
        In order to showcase my skills and at the same time collect feedback from
        previous collegues. <br /><br />
        I decided to walk you through the creation of a simple app that will do just
        so.<br /><br />
        What you see on the right is a little game that will guide you to
        understanding what are the necessary steps to create such an app.

      `,
    },
    {
      gif: "present-code-examples.gif",
      title: "Code examples!",
      content: `
        In the next section/page, you will see code examples of 
        the same app written using different technologies Stackblitz/Replit, 
        Which are online code editors.<br /><br />
        And if we've worked together before you will be able to use the form displayed there, to send your own review.
      `,
    },
    {
      gif: "present-github-db.gif",
      title: "Where is the review stored ?",
      content: `
        To avoid database costs, I will store the review as a PR that will be created on my GitHub repository. <br /><br />
        Once the PR is created, I will be able to deploy it to a preview url and review it. 
      `,
    },
    {
      gif: "present-deployments.gif",
      title: "The review will be deployed",
      content: `
        Each review left will be deployed to it's own url for preview while I validate it and deploy it to the website. <br /><br />
        This will allow me to showcase my knowledge of infrastructure/DevOps/GitOps.
      `,
    },
    {
      gif: "",
      title: "Play the game with Sam!",
      content: `
        Now that you know what we are going to do, let's play the game and see how it's done.
        Put the app bricks in the right order so that Sam's review is added to the website.
      `,
    },
  ];
  let index = 0;

  function revealSlide(index) {
    document.getElementById("skill-tastes-presentation-img").src =
      slides[index].gif;
    document.getElementById("skill-tastes-presentation-title").innerHTML =
      slides[index].title;
    document.getElementById("skill-tastes-presentation-text").innerHTML =
      slides[index].content;
  }

  revealSlide(0);

  const prevButton = document.getElementById("skill-tastes-presentation-prev");
  const nextButton = document.getElementById("skill-tastes-presentation-next");
  const bullets = Array.from(document.querySelectorAll(".bullet"));

  function prevFn() {
    if (index === 0) return;
    bullets[index].style.backgroundColor = "hsl(var(--muted))";
    index--;
    nextButton.disabled = false;
    bullets[index].style.backgroundColor = "hsl(var(--primary))";
    if (index === 0) {
      prevButton.disabled = true;
    }
    revealSlide(index);
  }

  function nextFn() {
    if (index === slides.length - 1) return;
    bullets[index].style.backgroundColor = "hsl(var(--muted))";
    index++;
    prevButton.disabled = false;
    bullets[index].style.backgroundColor = "hsl(var(--primary))";
    if (index === slides.length - 1) {
      nextButton.disabled = true;
    }
    revealSlide(index);
  }

  const intervalId = setInterval(nextFn, 5000);

  prevButton.addEventListener("click", prevFn);
  nextButton.addEventListener("click", () => {
    clearInterval(intervalId);
    nextFn();
  });
</script>
