---
import Presentation from "./presentation.astro";
import { Card } from "../ui/card";
import Game from "./game.astro";
import { Separator } from "../ui/separator";
---

<style scoped>
  .card {
    width: min-content;
  }
  #skill-taste-intro-parallax {
    overflow: hidden;
    z-index: -1;
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
  }

  #skill-taste-intro-parallax img {
    position: absolute;
    width: 25px;
    opacity: 0.3;
    mix-blend-mode: multiply;
    transition: 0.5s ease-out;
    pointer-events: all;
  }

  #skill-taste-intro-parallax img:hover {
    opacity: 1;
    width: 30px;
  }

  #skill-taste-intro-scene {
    position: relative;
    width: 100%;
    height: 100%;
  }
</style>

<section
  class="relative w-full h-full flex flex-col py-8 px-16 snap-start snap-always isolate"
>
  <div id="skill-taste-intro-parallax">
    <div id="skill-taste-intro-scene" class="relative">
      <img
        data-origin-x=".5"
        data-origin-y=".5"
        data-depth="1.6"
        src="angular.svg"
      />
      <img data-depth="1.2" src="react.svg" />
      <img data-depth="1.3" src="astro.svg" />
      <img data-depth="1.8" src="next.svg" />
      <img data-depth="1.2" src="svelte.svg" />
      <img data-depth="1.3" src="solidjs.svg" />
      <img data-depth="1.7" src="qwik.svg" />
      <img data-depth="1.9" src="node.svg" />
      <img data-depth="1.7" src="nest.svg" />
      <img data-depth="1.7" src="terraform.svg" />
      <img data-depth="1.7" src="kube.svg" />
      <img data-depth="1.7" src="argo.svg" />
      <img data-depth="1.7" src="jenkins.svg" />
      <img data-depth="1.7" src="git.svg" />
      <img data-depth="1.7" src="helm.svg" />
      <img data-depth="1.7" src="gh.svg" />
      <img data-depth="1.2" src="react.svg" />
      <img data-depth="1.3" src="astro.svg" />
      <img data-depth="1.8" src="next.svg" />
      <img data-depth="1.2" src="svelte.svg" />
      <img data-depth="1.3" src="solidjs.svg" />
      <img data-depth="1.7" src="qwik.svg" />
      <img data-depth="1.9" src="node.svg" />
      <img data-depth="1.7" src="nest.svg" />
      <img data-depth="1.7" src="terraform.svg" />
      <img data-depth="1.7" src="kube.svg" />
      <img data-depth="1.7" src="argo.svg" />
      <img data-depth="1.7" src="jenkins.svg" />
      <img data-depth="1.7" src="git.svg" />
      <img data-depth="1.7" src="helm.svg" />
      <img data-depth="1.7" src="gh.svg" />
      <img data-depth="1.2" src="react.svg" />
      <img data-depth="1.3" src="astro.svg" />
      <img data-depth="1.8" src="next.svg" />
      <img data-depth="1.2" src="svelte.svg" />
      <img data-depth="1.3" src="solidjs.svg" />
      <img data-depth="1.7" src="qwik.svg" />
      <img data-depth="1.9" src="node.svg" />
      <img data-depth="1.7" src="nest.svg" />
      <img data-depth="1.7" src="terraform.svg" />
      <img data-depth="1.7" src="kube.svg" />
      <img data-depth="1.7" src="argo.svg" />
      <img data-depth="1.7" src="jenkins.svg" />
      <img data-depth="1.7" src="git.svg" />
      <img data-depth="1.7" src="helm.svg" />
      <img data-depth="1.7" src="gh.svg" />
    </div>
  </div>
  <header>
    <h1 class="text-3xl font-bold mb-4">Skill tastes</h1>
    <h6 class="text-sm text-zinc-400 ml-2 mb-8">
      ðŸŽ¨ Let me try showcase what I can do
    </h6>
  </header>
  <Card className="card h-full self-center flex overflow-hidden bg-background">
    <Presentation />
    <Separator orientation="vertical" />
    <Game />
  </Card>
</section>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/parallax/3.1.0/parallax.min.js"
></script>
<script type="module">
  const scene = document.getElementById("skill-taste-intro-scene");
  const parallaxInstance = new Parallax(scene);

  function randomPositionImages() {
    const images = document.querySelectorAll("#skill-taste-intro-scene img");
    images.forEach((img) => {
      const maxX = window.innerWidth - img.width;
      const maxY = window.innerHeight - img.height;
      const randomX = Math.floor(Math.random() * maxX);
      const randomY = Math.floor(Math.random() * maxY);
      img.style.left = `${randomX}px`;
      img.style.top = `${randomY}px`;
    });
  }

  randomPositionImages();
</script>
